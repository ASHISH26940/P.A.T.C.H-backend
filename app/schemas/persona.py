# cogniflow-ai-service/app/models/persona.py
from pydantic import BaseModel, Field
from typing import Optional, List
import uuid
# from datetime import datetime # Uncomment if you want to add timestamps

class PersonaBase(BaseModel):
    """Base schema for a Persona, used for creation and common attributes."""
    name: str = Field(..., min_length=1, max_length=100, description="Name of the persona")
    description: Optional[str] = Field(None, max_length=500, description="Brief description of the persona")
    traits: List[str] = Field(default_factory=list, description="List of traits describing the persona")
    goals: List[str] = Field(default_factory=list, description="List of goals for the persona")

class PersonaCreate(PersonaBase):
    """Schema for creating a new Persona (input model for POST requests)."""
    # No additional fields needed for creation beyond PersonaBase,
    # as the ID will be generated by the backend.
    pass

class PersonaUpdate(PersonaBase):
    """Schema for updating an existing Persona (input model for PUT/PATCH requests)."""
    # All fields can be optional for partial updates, or required for full updates.
    # For a PUT, usually all fields are required unless specified otherwise.
    # For PATCH, all fields here would be Optional[type]
    pass

class PersonaInDB(PersonaBase):
    """Schema for Persona as stored in the database (output model for GET/POST responses)."""
    id: uuid.UUID = Field(..., description="Unique identifier of the persona")
    # created_at: datetime = Field(default_factory=datetime.utcnow) # Example timestamp
    # updated_at: datetime = Field(default_factory=datetime.utcnow) # Example timestamp

    class Config:
        # This tells Pydantic to read data from ORM models (e.g., SQLAlchemy)
        # by attribute name (e.g., my_model.id) rather than dictionary keys (e.g., my_dict['id']).
        # Essential if you ever use SQLAlchemy ORM models with these Pydantic schemas.
        from_attributes = True # For Pydantic v2.x (previously orm_mode = True in v1.x)